opamp
import diff_pair from glayout.flow.primitives.diff_pair
import generic_4T_interdigitzed from glayout.flow.placement.four_transistor_interdigitized
import current_mirror from glayout.flow.primitives.current_mirror
create an int parameter called numcols
place generic_4T_interdigitzed called mydiffload with numcols numcols top_kwargs {'tie_layers':("met3","met2")}top_row_device 'pfet' bottom_row_device  'pfet'  
place  a diff_pair called mydiff with width 5 fingers numcols dummy True substrate_tap True
move mydiffload to north of mydiff
route between mydiffload_top_A_source_W and mydiffload_top_B_source_W
route between mydiffload_top_A_gate_W and mydiffload_top_B_gate_W using c_route with extension=2
route between mydiffload_bottom_A_gate_W and mydiffload_bottom_B_gate_W using c_route with extension=2
route between mydiffload_bottom_A_gate_E and mydiffload_top_A_gate_E
route between mydiffload_bottom_A_gate_E and mydiffload_top_A_gate_E
route between mydiffload_top_A_drain_W  and mydiffload_bottom_A_source_W
route between mydiffload_top_B_drain_E and mydiffload_bottom_B_source_E  using c_route with extension=2
route between mydiffload_bottom_B_drain_W and mydiffload_bottom_B_gate_W
route between mydiffload_top_A_drain_W and mydiff_bl_multiplier_0_drain_W using c_route with extension=4
route between mydiffload_top_B_drain_E and mydiff_br_multiplier_0_drain_E using c_route with extension=4
place a current_mirror called mycurrmirror with numcols numcols device 'nfet' with_dummy False
move mycurrmirror to south of mydiff
route between mydiff_bl_multiplier_0_source_W and mycurrmirror_fet_B_0_source_W using c_route with extension=3
create a float parameter called load_pfet_width
create an int parameter called load_pfet_fingers
create an int parameter called load_pfet_multipliers
place a pfet called load_pfet_left with width load_pfet_width fingers load_pfet_fingers multipliers load_pfet_multipliers
# move load_pfet_left by -20,20
move load_pfet_left to left of mydiff
move load_pfet_left to north of mydiff
move load_pfet_left to left of mydiffload
place a pfet called load_pfet_right  with width load_pfet_width fingers load_pfet_fingers multipliers load_pfet_multipliers
# move load_pfet_right by 20,20
move load_pfet_right to right of mydiff
move load_pfet_right to north of mydiff
move load_pfet_right to right of mydiffload
route between load_pfet_right_multiplier_0_gate_con_N and load_pfet_left_multiplier_0_gate_con_N using c_route with extension=18 width1=0.8 width2=0.8
route between load_pfet_right_multiplier_0_drain_con_N and load_pfet_left_multiplier_0_drain_con_N using c_route with extension=8 width1=0.8 width2=0.8
route between load_pfet_right_multiplier_0_source_con_N and load_pfet_left_multiplier_0_source_con_N using c_route with extension=5.5 viaoffset=(True, False) fullbottom=True width1=0.8 width2=0.8
create an int parameter called load_curr_source_fingers
create a float parameter called load_curr_source_width_ref
create a float parameter called load_curr_source_width_mirr
place an nfet called load_curr_source_ref with width load_curr_source_width_ref fingers load_curr_source_fingers multipliers 2
move load_curr_source to left of mydiff
move load_curr_source_ref to the south mydiff
# move load_curr_source_ref by -20,0
move load_curr_source_ref to left of mycurrmirror
place an nfet called load_curr_source_mirr with width load_curr_source_width_mirr fingers load_curr_source_fingers multipliers 2
move load_curr_source_mirr to right of mydiff
move load_curr_source_mirr to the south mydiff
move load_curr_source_mirr to right of mycurrmirror
# move load_curr_source_mirr by 20,0
route between load_curr_source_ref_multiplier_0_gate_con_S and load_curr_source_mirr_multiplier_0_gate_con_S using c_route with extension=3 width1=0.8 width2=0.8
route between load_curr_source_ref_multiplier_0_drain_con_S and load_curr_source_mirr_multiplier_0_drain_con_S using c_route with extension=12 viaoffset=(False, True) width1=0.8 width2=0.8
route between load_curr_source_ref_multiplier_0_source_con_S and load_curr_source_mirr_multiplier_0_source_con_S using c_route with extension=14 width1=0.8 width2=0.8
route between load_curr_source_ref_multiplier_0_gate_E and load_curr_source_ref_multiplier_0_drain_E using c_route with extension=3 
# connect stage1 to stage2 pmos gate
route between mydiff_tr_multiplier_0_drain_W and load_pfet_right_multiplier_0_gate_con_S using L_route
route between load_pfet_right_multiplier_0_drain_con_S and load_curr_source_mirr_multiplier_0_drain_W using L_route
create a tuple parameter called mim_cap_size
create an int parameter called mim_cap_rows
place a mimcap array called load_miller_cap with rows mim_cap_rows columns 2 size mim_cap_size
# move load_miller_cap by 45,20
move load_miller_cap to right of mydiff
move load_miller_cap to north of mydiff
move load_miller_cap to right of load_pfet_right
route between mydiffload_top_B_0_drain_N and load_miller_cap_row0_col0_top_met_N using c_route with extension=15
# route between load_pfet_right_multiplier_0_drain_E and load_miller_cap_row0_col0_top_met_W using straight_route
route between load_pfet_right_multiplier_0_drain_con_S and load_miller_cap_row0_col0_top_met_S using c_route with width1=1.2 width2=1.2
