% Configuration for techsweep_hspice_run.m
% Boris Murmann
% Stanford University
% September 21, 2019

function c = techsweep_config_bsim4_45_hspice

% Model info and file paths
c.modelfile1 = '../hspice_lib/45nm_NMOS_bulk_tt.pm';
c.modelfile2 = '../hspice_lib/45nm_PMOS_bulk_tt.pm';
c.modelinfo = 'Stanford EE214B models, 45nm CMOS, BSIM4v0';
c.corner = 'NOM';
c.temp = 300;
c.modeln = 'nmos';
c.modelp = 'pmos';
c.savefilen = '45nch';
c.savefilep = '45pch';
c.simcmd = '/afs/ir/class/ee/synopsys/hspice/I-2013.12-SP2/hspice/bin/hspice techsweep.sp >! techsweep.out';
c.outfile = 'techsweep.sw0';
c.outfile_noise = 'techsweep.ac0';

% Path to hspice toolbox (http://www.cppsim.com/download_hspice_tools.html)
addpath('/afs/ir/class/ee214b/matlab_lib/hspice_toolbox')

% Sweep parameters
c.VGS_step = 25e-3;
c.VDS_step = 25e-3;
c.VSB_step = 100e-3;
c.VGS_max = 1;
c.VDS_max = 1;
c.VSB_max = 1;
c.VGS = 0:c.VGS_step:c.VGS_max;
c.VDS = 0:c.VDS_step:c.VDS_max;
c.VSB = 0:c.VSB_step:c.VSB_max;
c.LENGTH = [(0.045:0.005:0.2) (0.3:0.1:2.0)];
c.WIDTH = 2;
c.NFING = 1;

% Variable definitions
c.nvars = {'n_id', 'n_vt', 'n_gm', 'n_gmb', 'n_gds', 'n_cgg', 'n_cgs', 'n_cgd', 'n_cgb', 'n_cdd', 'n_css'}; 
c.pvars = {'p_id', 'p_vt', 'p_gm', 'p_gmb', 'p_gds', 'p_cgg', 'p_cgs', 'p_cgd', 'p_cgb', 'p_cdd', 'p_css'}; 
c.outvars = {'ID', 'VT', 'GM', 'GMB', 'GDS', 'CGG', 'CGS', 'CGD', 'CGB', 'CDD', 'CSS'};
c.nvars_noise = {'ni_mn', 'nf_mn'}; 
c.pvars_noise = {'ni_mp', 'nf_mp'}; 
c.outvars_noise = {'STH', 'SFL'};

% Simulation netlist
netlist = sprintf([...
'techsweep.sp \n'...
'.inc %s \n'...
'.inc %s \n'...
'.inc techsweep_params.sp \n'...
'.temp %d \n'...
'vnoi     vx  0         dc 0  \n'...
'vdsn     vdn vx        dc ''ds''  \n'...
'vgsn     vgn 0         dc ''gs''  \n'...
'vbsn     vbn 0         dc ''-sb'' \n'...
'vdsp     vdp vx        dc ''-ds'' \n'...
'vgsp     vgp 0         dc ''-gs'' \n'...
'vbsp     vbp 0         dc ''sb''  \n'...
'h1       vn  0        ccvs  vnoi  1 \n'...
'* NOTE: YOUR MODELS SHOULD BE SET UP SUCH THAT THE STRESS PARAMS (SA, SB, etc.) ARE AUTOMATICALLY COMPUTED\n'...
'mn       vdn vgn 0 vbn %s  L=''length*1e-6'' W=%d \n'...
'mp       vdp vgp 0 vbp %s  L=''length*1e-6'' W=%d \n'...
'.options dccap post brief accurate \n'...
'\n'...
'.dc gs 0 %d %d ds 0 %d %d \n'...
'.ac lin 1 1 1 sweep data=data1 \n'...
'.noise v(vn) vnoi\n'...
'\n'...
'.probe dc n_id   = par(''id(mn)'') \n'...
'.probe dc n_vt   = par(''vth(mn)'') \n'...
'.probe dc n_gm   = par(''gmo(mn)'')   \n'...
'.probe dc n_gmb  = par(''gmbso(mn)'') \n'...
'.probe dc n_gds  = par(''gdso(mn)'')  \n'...
'.probe dc n_cgg  = par(''cggbm(mn)'') \n'...
'.probe dc n_cgs  = par(''-cgsbm(mn)'') \n'...
'.probe dc n_cgd  = par(''-cgdbm(mn)'') \n'...
'.probe dc n_cgb  = par(''cggbm(mn)-(-cgsbo(mn))-(-cgdbo(mn)) '') \n'...
'.probe dc n_cdd  = par(''cddbm(mn)'') \n'...
'.probe dc n_css  = par(''-cgsbm(mn)-cbsbo(mn)'') \n'...
'\n'...
'.probe dc p_id   = par(''-id(mp)'') \n'...
'.probe dc p_vt   = par(''vth(mp)'') \n'...
'.probe dc p_gm   = par(''gmo(mp)'') \n'...
'.probe dc p_gmb  = par(''gmbso(mp)'') \n'...
'.probe dc p_gds  = par(''gdso(mp)'') \n'...
'.probe dc p_cgg  = par(''cggbm(mp)'') \n'...
'.probe dc p_cgs  = par(''-cgsbm(mp)'') \n'...
'.probe dc p_cgd  = par(''-cgdbm(mp)'') \n'...
'.probe dc p_cgb  = par(''cggbm(mp)-(-cgsbo(mp))-(-cgdbo(mp)) '') \n'...
'.probe dc p_cdd  = par(''cddbm(mp)'') \n'...
'.probe dc p_css  = par(''-cgsbm(mp)-cbsbo(mp)'') \n'...
'.end \n'...
], c.modelfile1, c.modelfile2, c.temp-273, ...
c.modeln, c.WIDTH*1e-6, ...
c.modelp, c.WIDTH*1e-6, ...
c.VGS_max, c.VGS_step, ...
c.VDS_max, c.VDS_step);

% Write netlist
fid = fopen('techsweep.sp', 'w');
fprintf(fid, netlist);
fclose(fid);

return
